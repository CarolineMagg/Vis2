#version 440 core

#define _SPOT_LIGHTS_COUNT **%%SPOT_LIGHT_COUNT%%**

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;

out vec2 TexCoords;
out vec3 Normal;
out vec3 FragPos;
out vec4 FragPosLightSpace[_SPOT_LIGHTS_COUNT];

uniform mat4 model;
uniform mat4 viewProjection;
uniform mat4 lightSpaceMatrix[_SPOT_LIGHTS_COUNT];

void main()
{
    TexCoords = aTexCoords;
	Normal = normalize(transpose(inverse(mat3(model))) * aNormal);	
	vec4 modelAPos = model * vec4(aPos, 1.0);
	FragPos = vec3(modelAPos);    

	for(int i = 0; i < _SPOT_LIGHTS_COUNT; i++) {
		FragPosLightSpace[i] = lightSpaceMatrix[i] * modelAPos;
	}

	gl_Position = viewProjection * model * vec4(aPos, 1.0);
}