#version 330 core
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2DMS normalTexRender;
uniform sampler2DMS tamRender;
uniform sampler2D volumetricLights;
uniform sampler2DMS contourMask;

uniform float blendMainTexture;
uniform float contourBlend;
uniform int MSCount;

void main() {
	
	vec4 noEffectColor = vec4(0.0f);
	vec4 tamColor = vec4(0.0f);
	ivec2 tex1Coords = ivec2(textureSize(normalTexRender) * TexCoords);

	if (blendMainTexture <= 0.9999f) {				
		for (int i = 0; i < MSCount; i++) {
			noEffectColor += texelFetch(normalTexRender, tex1Coords, i);
		}
		noEffectColor /= MSCount;
	}

	if (blendMainTexture > 0.00001f) {
		for (int i = 0; i < MSCount; i++) {
			tamColor += texelFetch(tamRender, tex1Coords, i);
		}
		tamColor /= MSCount;	
	}		

	//Version 1 mix
	//tamColor = clamp(tamColor+vec4(1.0f-blendMainTexture),vec4(0.0f),vec4(1.0f));
	//FragColor = mix(noEffectColor,vec4(1.0f),blendMainTexture)*tamColor*mix(1,texture(contourMask, TexCoords).x,contourBlend) + texture(volumetricLights, TexCoords);
	//Version 2 mix

	float contour = 1.0f;	
	if (contourBlend >= 0.0001f) {
		float contourCol = 0.0f;
		for (int i = 0; i < MSCount; i++) {
			contourCol += texelFetch(contourMask, tex1Coords, i).r;
		}
		contourCol /= MSCount;
		contour = mix(1,contourCol,contourBlend);
	}

	if (blendMainTexture <= 0.00001f) {
		FragColor = noEffectColor * contour + texture(volumetricLights, TexCoords);
	} else if (blendMainTexture > 0.9999f) {
		FragColor = tamColor * contour + texture(volumetricLights, TexCoords);
	} else {
		FragColor = mix(noEffectColor,tamColor,blendMainTexture) * contour + texture(volumetricLights, TexCoords);
	}
}
