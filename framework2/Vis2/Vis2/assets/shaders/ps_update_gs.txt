#version 440 core                                                                                                                               
 
#define LAUNCHER 0.0f                                                                                                  
#define EXPLOSION_SHELL 1.0f  
 
layout(points) in;                                                                  
layout(points) out;                                                                 
layout(max_vertices = 30) out;                                                      
                                                                                    
in float types[];                                                                   
in vec3 positions[];                                                                
in vec3 velocities[];                                                                
in float ages[];                                                                    
                                                                                    
out float T;                                                                    
out vec3 P;                                                                 
out vec3 V;                                                                 
out float A;                                                                     
                                                                                    
uniform float timeDelta;                                                                                                                                                                   
uniform float launcherDur;                                                                                                       
uniform float shellDur;
uniform vec3 lightDir;
uniform vec3 lightPos;
uniform mat3 dirRot;
uniform float cutOff;

uniform vec4 randoms;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}
                                                                                    
void main()                                                                         
{                                                                                   
    float currentAge = ages[0] + timeDelta;       
	
	
                                                                                    
    if (types[0] == LAUNCHER) {                                       
        if (currentAge >= launcherDur) {                                           
            
			for (int i = 0 ; i < 2 ; i++) {                                    
                T = EXPLOSION_SHELL;                         
                P = positions[0];
				  
				float tt1 = rand(vec2(randoms.x, i * timeDelta)) * (1-cutOff) + cutOff;
				float tt2 = rand(vec2(randoms.y, i * timeDelta)) * 2 * 3.14f;
				float tt3 = sqrt(1-(tt1*tt1)) * cos(tt2);
				float tt4 = sqrt(1-(tt1*tt1)) * sin(tt2);

                V = dirRot * vec3(tt3, tt4 , 1 ) * (2.5f + 2.5f * randoms.z); 
                A = 0.0f;                                                   
                EmitVertex();                                                  
                EndPrimitive();                                                
			}   


            currentAge = 0.0;  
			T = LAUNCHER;                                             
			P = lightPos;
			V = velocities[0];                                                   
			A = currentAge;                                                                 
			EmitVertex();                                                               
			EndPrimitive();
        } else {
			T = LAUNCHER;                                             
			P = positions[0];
			V = velocities[0];                                                   
			A = currentAge;                                                                 
			EmitVertex();                                                               
			EndPrimitive();    
		}    		
    } else {                                                                      
                                              
        if (currentAge < shellDur) {                				
			float DeltaTimeSecs = timeDelta / 1000.0f;                           				                                      
			vec3 DeltaP = DeltaTimeSecs * velocities[0]; 

			T = EXPLOSION_SHELL;                              
			P = positions[0] + DeltaP;                                  
			V = velocities[0];// + vec3((rand(vec2(currentAge, randoms.x)) * 2 - 1), (rand(vec2(currentAge, randoms.y)) * 2 - 1), (rand(vec2(currentAge, randoms.z)) * 2 - 1)) * 0.03f;                                  
			A = currentAge;                                                         
			EmitVertex();                                                       
			EndPrimitive();                                      
        }                                                                       
                                                                                 
    }                                                                               
}                                                                                   
