#version 450 core

float dither_pattern[16] = float[16] (
	0.0f, 0.5f, 0.125f, 0.625f,
	0.75f, 0.22f, 0.875f, 0.375f,
	0.1875f, 0.6875f, 0.0625f, 0.5625,
	0.9375f, 0.4375f, 0.8125f, 0.3125
);

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2DArray vpb;
layout(rgba32f, binding = 1) uniform image2DArray vdb;
layout(rgba32f, binding = 2) uniform image2DArray lb;
layout(rgba32f, binding = 3) uniform image2DArray ldb;
layout(rgba32f, binding = 4) uniform image2DArray cb;
layout(rgba32f, binding = 5) uniform image2DArray mb;

uniform vec3 voxelSize;
uniform vec3 lightVSPos;
uniform vec3 lightColor;

uniform mat4 viewMatrix;
uniform vec4 viewPos;
uniform vec3 viewDir;
uniform float sphereRadius;
uniform vec3 middleOfPlaneVS;
uniform float planeDistance;

uniform int planeWidth;
uniform int planeHeight;

void main() {
  
  ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);
  vec4 pixel = vec4(1.0f, 1.0f,  1.0f, 1.0f);
  
  vec3 pixelPos = middleOfPlaneVS + vec3(-0.5 + pixel_coords.x/planeWidth, -0.5 + pixel_coords.y/planeHeight, 0);
  
  // enable dithering
  //float dither = dither_pattern[ (int(pixel_coords.x) % 4) * 4 + (int(pixel_coords.y) % 4) ] * planeDistance;
  //pixelPos.z += dither;

  imageStore(vpb, pixel_coords, vec4(pixelPos,1.0));
  imageStore(vdb, pixel_coords, vec4(normalize(pixelPos.xyz), 0.0));
  imageStore(lb, pixel_coords, vec4(lightColor, 1.0));
  imageStore(ldb, pixel_coords, vec4(normalize(pixelPos-lightVSPos), 0.0));
  imageStore(mb, pixel_coords, vec4(1.0));
  imageStore(cb, pixel_coords, vec4(0.0));
}